C++ hacks:

--> Set in STL is implemented using self balancing binary tree(So it is always SORTED).
	set<int> set1;

--> Lower Bound & Upper Bound:
		
		vector<int>::iterator lower = lower_bound (v.begin(), v.end(), 3);
		vector<int>::iterator upper = upper_bound (v.begin(), v.end(), 3);
		else use auto lower = same as above
		arr = 1 2 4 4 5
		For 4, lower = 2 and upper = 3
		For 3, lower = 2 and upper = 2
		For 0, lower = 0 and upper = 0
		For 6, lower = 5 and upper = 5

--> sort vector in Descending order:

    	sort(ar.begin(), ar.end(), greater<int>());

--> ForEach loop:
		for (int x : arr)
		    cout << x << endl;
		for(auto x : arr) also works!

--> To find the MOST SIGNIFICANT digit

		Let double K = log10(N);
		now K = K - floor(K);
		int X = pow(10, K);
		X will be the most significant digit.

--> Number of DIGITS

    	Number of digits in N =floor(log10(N)) + 1;

--> Sort vector of pairs
	
	To sort by FIRST element
		sort(vect.begin(), vect.end());	
	To sort by SECOND element
		bool sortbysec(const pair<int,int> &a, const <int,int> &b){
			return (a.second<b.second);	
		}
		sort(vect.begin(), vect.end(), sortbysec);

--> Difference between ordered and unordered map in c++
		
	https://www.geeksforgeeks.org/map-vs-unordered_map-c/	


--> Declare array of Pointers:
	Node *temp[10];
	at first all have garbage values
	to initialize this
	Node *temp[10] = {NULL}
